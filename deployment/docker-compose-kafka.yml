version: '3.8'

volumes:
  pd-kafka_data:
    name: pd-kafka_data
  pd-zookeeper_data:
    name: pd-zookeeper_data

services:
  pd-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    expose:
      - '32181'
    environment:
      - ZOOKEEPER_CLIENT_PORT=32181
    volumes:
      - pd-zookeeper_data:/var/lib/zookeeper/data
    networks:
      - pd-kafka_network

  pd-kafka:
    image: confluentinc/cp-kafka:7.5.3
    restart: on-failure
    ports:
      - '9092:9092'
    expose:
      - '9093'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: pd-zookeeper:32181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://pd-kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: 'PropagandaDetector.Messages.Raw,PropagandaDetector.Messages.Prepared,PropagandaDetector.Messages.Processed'
    depends_on:
      - pd-zookeeper
    volumes:
      - pd-kafka_data:/var/lib/kafka
    networks:
      - pd-kafka_network

  # http://localhost:8082
  pd-kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - '8082:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=default
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=pd-kafka:9093
    depends_on:
      - pd-kafka
    networks:
      - pd-kafka_network

networks:
  pd-kafka_network:
